{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\susan\\\\OneDrive\\\\Documents\\\\GitHub\\\\google-clone\\\\src\\\\components\\\\results\\\\Results.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nimport { useResultContext } from \"../../contexts/ResultContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = () => {\n  _s();\n\n  const {\n    results,\n    isLoading,\n    getResults,\n    searchTerm\n  } = useResultContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Results, \"NPsezs3TiLXhkk54BY0ooQMDNsI=\", false, function () {\n  return [useResultContext];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/susan/OneDrive/Documents/GitHub/google-clone/src/components/results/Results.jsx"],"names":["React","useEffect","useLocation","ReactPlayer","useResultContext","Results","results","isLoading","getResults","searchTerm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,gBAAT,QAAiC,sCAAjC;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,MAAiDL,gBAAgB,EAAvE;AAEA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;GAAMC,O;UACqDD,gB;;;KADrDC,O;AAUN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport { useResultContext } from \"../../contexts/ResultContextProvider\";\r\n\r\nconst Results = () => {\r\n    const { results, isLoading, getResults, searchTerm } = useResultContext();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Results</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Results;\r\n"]},"metadata":{},"sourceType":"module"}